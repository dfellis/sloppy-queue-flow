// sloppy-queue-flow Copyright (C) 2012 by David Ellis
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.
// The `sloppy` constructor function, which either uses the supplied queueing engine, or
// uses the built-in in-memory engine.
function sloppy(e){var t=this;this.qType=sloppy;var n={},r=[],i=undefined,s=0;this.on=function(t,r){return n||(n={}),n[t]=n[t]instanceof Array?n[t]:[],n[t].push(r),this},this.fire=function(r){var i=Array.prototype.slice.call(arguments,1);return n?n[r]?n[r].every(function(e){return e instanceof Function?e.apply(t,i)!==!1:!0}):!0:!1},this.clear=function(t){n[t]=[]},this.setHandler=function(t){return i=t,r&&r.length>0&&this.push(),this};var o=function(){s--,s||t.fire("empty")};return this.push=function(){var t=this,n=Array.prototype.slice.call(arguments,0);return this.fire("push",n)&&(i?(n=n.concat(r),r=[],n.forEach(function(e){s++,setTimeout(i.bind(t,e,o),0)})):r=r.concat(n)),this},this.close=function(){this.fire("close")&&(this.clear("close"),this.on("close",function(){return!1}),setTimeout(function(){i instanceof Function&&i("close"),n=undefined,r=undefined,i=undefined,delete this},0))},e instanceof Array&&(this.closeOnEmpty(),this.push.apply(this,e)),this}module&&module.exports?(sloppy.prototype=global.q&&!!q.Q?q.Q.prototype:require("queue-flow").Q.prototype,module.exports=sloppy):sloppy.prototype=q.Q.prototype;