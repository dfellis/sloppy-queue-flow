if(!process||!process.nextTick){process=process||{};process.nextTick=process.nextTick||setTimeout}function sloppy(nameOrArray){this.qType=sloppy;var eventHandlers={};var queue=[];var handler=undefined;var openHandlers=0;this.on=function on(eventName,handler){eventHandlers[eventName]=eventHandlers[eventName]instanceof Array?eventHandlers[eventName]:[];eventHandlers[eventName].push(handler);return this};this.fire=function fire(eventName){var newArgs=Array.prototype.slice.call(arguments,1);if(eventHandlers[eventName]){return eventHandlers[eventName].every(function(handler){if(handler instanceof Function){return handler.apply(this,newArgs)!==false}return true}.bind(this))}else{return true}};this.clear=function clear(eventName){eventHandlers[eventName]=[]};this.setHandler=function setHandler(handlerFunc){handler=handlerFunc;if(queue&&queue.length>0){this.push()}return this};var handlerCallback=function handlerCallback(done){if(done instanceof Function)done();openHandlers--;if(!openHandlers){this.fire("empty")}}.bind(this);this.push=function push(){var values=Array.prototype.slice.call(arguments,0);if(this.fire("push",values)){if(!!handler){values=values.concat(queue);queue=[];values.forEach(function(value){openHandlers++;process.nextTick(handler.bind(this,value,handlerCallback))}.bind(this))}else{queue=queue.concat(values)}}return this};this.close=function close(){if(this.fire("close")){this.clear("close");this.push=function(){};this.on("close",function(){return false});function finalizeClose(){if(handler instanceof Function){handler("close")}eventHandlers={};queue=undefined;handler=undefined;if(this.namedQueues)Object.keys(this.namedQueues).forEach(function(queue){if(this.namedQueues[queue]===this)delete this.namedQueues[queue]}.bind(this));delete this}if(openHandlers==0){process.nextTick(finalizeClose.bind(this))}else{this.on("empty",finalizeClose.bind(this))}}};this.kill=function kill(){this.fire("kill");var tempHandler=handler;handler=undefined;eventHandlers={};queue=undefined;if(this.namedQueues)Object.keys(this.namedQueues).forEach(function(queue){if(this.namedQueues[queue]===this)delete this.namedQueues[queue]}.bind(this));delete this;if(tempHandler instanceof Function){tempHandler("kill")}};if(nameOrArray instanceof Array){this.push.apply(this,nameOrArray);if(queue.length>0)this.on("empty",this.close.bind(this))}return this}if(module&&module.exports){sloppy.prototype=global.q&&!!q.Q?q.Q.prototype:require("queue-flow").Q.prototype;module.exports=sloppy}else{sloppy.prototype=q.Q.prototype}